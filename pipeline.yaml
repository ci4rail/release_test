resources:
  - name: image-changelog-tool
    type: docker-image
    source:
      repository: ferrarimarco/github-changelog-generator 
      tag: latest

  - name: image-bb-gitversion-tool
    type: docker-image
    source:
      repository: elbb/bb-gitversion
      tag: 0.7.0

  - name: image-git-tool
    type: docker-image
    source:
      repository: alpine/git
      tag: v2.26.2

  - name: image-golang
    type: docker-image
    source:
      repository: golang
      tag: 1.15.6-buster

  - name: image-aws-cli
    type: docker-image
    source:
      repository: amazon/aws-cli
      tag: 2.0.22

  # Git sources
  - name: source-staging
    type: git
    source:
      uri: ((git_source))
      private_key: ((private_key))
      branch: ((git_branch))
      skip_ssl_verification: ((git_skip_ssl_verification))

  - name: source-release
    type: git
    source:
      uri: ((git_source))
      tag_regex: make-release-[0-9]+.[0-9]+.[0-9]+
      private_key: ((private_key))
      branch: ((git_release_branch))
      skip_ssl_verification: ((git_skip_ssl_verification))

  # second source-release resource-release needed because of the changelog commit. If used with only one
  # resource-release, the commit triggers the build pipeline
  - name: source-release-modified
    type: git
    source:
      uri: ((git_source))
      private_key: ((private_key))
      branch: ((git_release_branch))
      skip_ssl_verification: ((git_skip_ssl_verification))      



  # S3 buckets
  - name: s3-staging-test-windows
    type: s3
    source:
      bucket: ((staging_s3_bucket))
      endpoint: ((s3_endpoint))
      regexp: ((name))/test-windows-(.*)
      access_key_id: ((s3_access_key))
      secret_access_key: ((s3_secret_key))
      disable_ssl: ((s3_skip_ssl_verification))

  - name: s3-staging-test-linux
    type: s3
    source:
      bucket: ((staging_s3_bucket))
      endpoint: ((s3_endpoint))
      regexp: ((name))/test-linux-(.*)
      access_key_id: ((s3_access_key))
      secret_access_key: ((s3_secret_key))
      disable_ssl: ((s3_skip_ssl_verification))

  # Github release
  - name: gh-release
    type: github-release
    source:
      owner: ci4rail
      repository: release_test
      access_token: ((github_access_token))
      release: true

jobs:
  - name: staging-((name))
    public: true
    plan:
      - in_parallel:
          - get: source-staging
            trigger: true
          - get: image-golang
          - get: image-aws-cli
          - get: image-bb-gitversion-tool
      - in_parallel:
        - task: generate-version
          image: image-bb-gitversion-tool
          config:
            platform: linux
            inputs:
              - name: source-staging
            outputs:
              - name: gitversion
            run:
              path: /bin/bash
              args:
                - -exc
                - |
                  entrypoint.sh &&
                  jq empty gitversion/json/gitversion.json &&
                  cat gitversion/json/gitversion.json
            params:
              GIT_PATH: source-staging
              GEN_PATH: gitversion

        - task: check-or-create-bucket-for-((staging_s3_bucket))-on-s3
          image: image-aws-cli
          config:
            platform: linux
            run:
              path: /bin/bash
              args:
                - -xc
                - |
                  mkdir -p ~/.aws
                  # hide setting credentials in plain text in concourse ui
                  set +x
                  export TERM="xterm-256color"
                  echo "[default]" > ~/.aws/credentials
                  echo "aws_access_key_id=((s3_access_key))" >> ~/.aws/credentials
                  echo "aws_secret_access_key=((s3_secret_key))" >> ~/.aws/credentials
                  set -x
                  # check if bucket exists on s3 endpoint. If not create one
                  aws --endpoint-url ((s3_endpoint)) s3api head-bucket --bucket ((staging_s3_bucket)) 2> /dev/null
                  if [ $? != 0 ]; then aws s3 mb s3://((staging_s3_bucket)) --endpoint-url ((s3_endpoint)); fi

      - task: build-test
        image: image-golang
        config:
          platform: linux
          inputs:
            - name: source-staging
            - name: gitversion
          outputs:
            - name: install
          run:
            path: /bin/bash
            args:
              - -ec
              - |
                ROOT=$(pwd)
                cd ${ROOT}/source-staging/test
                export VERSION=$(cat ${ROOT}/gitversion/plain/InformationalVersion)
                make
                mkdir -p ${ROOT}/install/${VERSION}/
                cp ../bin/test-linux ${ROOT}/install/test-linux-${VERSION}
                cp ../bin/test-windows.exe ${ROOT}/install/test-windows-${VERSION}.exe
                ${ROOT}/install/test-linux*

      - put: s3-staging-test-linux
        params:
          file: install/test-linux-*
          acl: public-read

      - put: s3-staging-test-windows
        params:
          file: install/test-windows-*
          acl: public-read

  - name: release-((name))
    public: true
    plan:
      - in_parallel:
          - get: image-git-tool
          - get: source-release
            trigger: true
          - get: source-release-modified
          - get: image-golang
          - get: image-changelog-tool
      - task: get-make-release-tag
        image: image-git-tool
        config:
          platform: linux
          inputs:
            - name: source-release
          outputs:
            - name: release-tag
          run:
            path: /bin/sh
            args:
              - -exc
              - |
                echo $(cd source-release && git tag --points-at HEAD | grep make-release) > release-tag/oldtag
                echo $(cd source-release && git tag --points-at HEAD | grep make-release | awk -F"make-release-" '{print $2}') > release-tag/tag
                cat release-tag/tag

      - task: generate-changelog
        image: image-changelog-tool
        config:
          platform: linux
          inputs:
            - name: source-release
            - name: release-tag
          outputs:
            - name: changelog
          run:
            path: /bin/sh
            args:
              - -ec
              - |
                ROOT=$(pwd)
                cd changelog 
                github_changelog_generator -t ((github_access_token)) --user ci4rail --project release_test
                sed -i "s/$(cat ${ROOT}/release-tag/oldtag)/$(cat ${ROOT}/release-tag/tag)/g" ${ROOT}/changelog/CHANGELOG.md
                cat ${ROOT}/changelog/CHANGELOG.md

      - task: commit-changelog
        image: image-git-tool
        config:
          platform: linux
          inputs:
            - name: changelog
            - name: release-tag
            - name: source-release-modified
          outputs:
            - name: source-release-modified
          run:
            path: /bin/sh
            args:
              - -ec
              - |
                ROOT=$(pwd)
                cd source-release-modified
                cp ${ROOT}/changelog/CHANGELOG.md .
                git config --global user.email "engineering@ci4rail.com"
                git config --global user.name "yoda-ci4rail"
                git add CHANGELOG.md
                git commit -am "Updated CHANGELOG.md for release $(cat ${ROOT}/release-tag/tag)"
  
      - put: source-release-modified
        params: 
          repository: source-release-modified

      - task: build-kyt-cli
        image: image-golang
        config:
          platform: linux
          inputs:
            - name: source-release-modified
            - name: release-tag
          outputs:
            - name: install
          run:
            path: /bin/bash
            args:
              - -ec
              - |
                ROOT=$(pwd)
                cd ${ROOT}/source-release-modified/test
                VERSION=$(cat ${ROOT}/release-tag/tag) make
                cp ../bin/* ${ROOT}/install
                ${ROOT}/install/test-linux

      - put: gh-release
        params:
          name: release-tag/tag
          tag: release-tag/tag
          globs:
            - install/*

      # - task: test-kyt-cli
      #   image: image-golang
      #   config:
      #     platform: linux
      #     inputs:
      #       - name: install
      #       - name: release-tag
      #     run:
      #       path: /bin/bash
      #       args:
      #         - -ec
      #         - |
      #           echo success





  # - name: release-((name))
  #   public: true
  #   plan:
  #     - in_parallel:
  #         - get: image-bb-gitversion-tool
  #         - get: source-tag
  #           trigger: true
  #         - get: image-golang

  #     - task: generate-version
  #       image: image-bb-gitversion-tool
  #       config:
  #         platform: linux
  #         inputs:
  #           - name: source-tag
  #         outputs:
  #           - name: gitversion
  #         run:
  #           path: /bin/bash
  #           args:
  #             - -exc
  #             - |
  #               entrypoint.sh &&
  #               jq empty gitversion/json/gitversion.json &&
  #               cat gitversion/json/gitversion.json
  #         params:
  #           GIT_PATH: source
  #           GEN_PATH: gitversion

  #     - task: build-kyt-cli
  #       image: image-golang
  #       config:
  #         platform: linux
  #         inputs:
  #           - name: source-tag
  #           - name: gitversion
  #         outputs:
  #           - name: install
  #         run:
  #           path: /bin/bash
  #           args:
  #             - -ec
  #             - |
  #               ROOT=$(pwd)
  #               cd ${ROOT}/source-tag/test
  #               VERSION=$(cat ${ROOT}/gitversion/plain/InformationalVersion) make
  #               cp ../bin/* ${ROOT}/install

  #     - task: test-kyt-cli
  #       image: image-golang
  #       config:
  #         platform: linux
  #         inputs:
  #           - name: install
  #           - name: gitversion
  #         run:
  #           path: /bin/bash
  #           args:
  #             - -ec
  #             - |
  #               if [ "$(install/test-linux | grep $(cat ${ROOT}/gitversion/plain/SemVer) | wc -l)" != "1" ]; then
  #                 exit 1
  #               fi

  #     - task: changelog
  #       image: image-changelog-tool
  #       config:
  #         platform: linux
  #         inputs:
  #           - name: install
  #           - name: gitversion
  #         run:
  #           path: /bin/bash
  #           args:
  #             - -ec
  #             - |
  #               if [ "$(install/test-linux | grep $(cat ${ROOT}/gitversion/plain/SemVer) | wc -l)" != "1" ]; then
  #                 exit 1
  #               fi
                

  #     - put: gh-release
  #       params:
  #         name: gitversion/plain/SemVer
  #         tag: gitversion/plain/SemVer
  #         globs:
  #           - install/*
